{"version":3,"sources":["components/Container/Projects.js","components/Container/index.js","data/companies.js","components/Timeline/index.js","App.js","serviceWorker.js","index.js"],"names":["Projects","_ref","data","map","project","i","react_default","a","createElement","key","className","screens","screen","index","img","Object","assign","src","alt","height","video","width","controls","type","style","marginBottom","body","Container","company","orientation","id","title","avatar","projects","dates","containerClasses","push","join","react_markdown_default","source","escapeHtml","linkTarget","Container_Projects","companies","Timeline","components_Container","App","components_Timeline","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ad0ff9da.chunk.js","sourcesContent":["import React from 'react';\n\nconst Projects = ({\n  data\n}) => {\n  if (data) {\n    return (\n      data.map((project, i) => (\n        <div key={i} className=\"company--project\">\n          {project.screens.map((screen, index) =>\n            <div key={index}>\n              {screen.img ? (\n                <img\n                  src={screen.img}\n                  alt=\"\"\n                  className={!screen.height ? 'w-100' : ''}\n                  {...(screen.height ? { height: screen.height } : {})}\n                />\n              ) : ''}\n\n              {screen.video ?\n                <video width=\"400\" controls>\n                  <source src={screen.video} type=\"video/mov\" />\n                  Your browser does not support HTML5 video.\n                </video>\n                : ''}\n              <p style={{ marginBottom: '3rem' }}>\n                {screen.body}\n              </p>\n            </div>\n          )}\n        </div>\n      ))\n    )\n  }\n}\n\nexport default Projects","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport Projects from './Projects';\nimport './Container.css';\n\nconst Container = ({ company }) => {\n  const {\n    id,\n    orientation,\n    title,\n    body,\n    type,\n    avatar,\n    projects,\n    dates\n  } = company;\n  const containerClasses = ['container'];\n\n  if (orientation) {\n    containerClasses.push(orientation);\n  }\n\n  containerClasses.push(type)\n\n  return (\n    <div\n      {...(id, { id }, {})}\n      className={containerClasses.join(' ')}\n    >\n      <div className=\"content\">\n        {avatar ? <img alt=\"Avatar\" src={avatar} className=\"avatar\" /> : ''}\n        <h2>{title}</h2>\n\n        <ReactMarkdown\n          source={body}\n          escapeHtml={false}\n          linkTarget=\"_blank\"\n        />\n\n        <div>{dates}</div>\n\n        {projects && (\n          <Projects data={projects} />\n        )}\n      </div>\n    </div >\n  );\n}\n\nexport default Container;\n","const companies = [\n  {\n    type: 'nontimeline',\n    avatar: 'https://github.com/amabes.png?size=128',\n    title: 'Alan Mabry',\n    orientation: 'right',\n    body: `\nI started building web apps in 2008. Before that I was designing websites and pursuing a BFA.\n\nI'm framework agnostic, but prefer React & NextJs to build enterprise web applications.\n\nCurrently, I'm at [CLEAR](https://www.clearme.com/business-and-partnerships) building identity verification applications used by Fortune 500 companies including [AVIS](https://www.clearme.com/partners/avis) and [LinkedIn](https://www.clearme.com/partners/linkedin).\n\nAt my previous position, I worked at [Total Brain](https://totalbrain.com), a platform to improve mental health and monitor brain performance.\n\nMy go to tech includes Javascript, React, NodeJS and Cypress.\n\nThe examples below are highlights from the past 10+ years and some current endeavors.\n\n[See my LinkedIn profile](https://www.linkedin.com/in/alanmabry) for more career details.\n`\n  },\n  {\n    type: 'header',\n    avatar: 'imgs/projects/clear/clear-avatar.jpeg',\n    title: 'CLEAR',\n    body: `\n[clearme.com](https://clearme.com/)\n\nSoftware Engineer III\n    `,\n    dates: 'Feb 2022 - Current',\n    orientation: 'right'\n  },\n  {\n    type: 'nontimeline',\n    title: 'CLEAR Check-in',\n    body: `\nHelped build out Verify with CLEAR, a centralized identity platform, using Next/React/TS and an embeddable button for clients to integrate in their websites.\n\nBuilt internal tools to emulate client integration that enabled engineers to develop more efficiently and test more effectively with Cypress.\n\nWorked with Mitek & iProov for face capture and wrote integrations for SplunkRum to give better E2E visibility.\n  `,\n    orientation: 'right',\n    projects: [\n      {\n\n        screens: [\n          {\n            img: 'imgs/projects/clear/clear-check-in-how-it-works.png'\n          },\n          {\n            img: 'imgs/projects/clear/clear-web-verify.gif',\n            height: '600px',\n          }\n        ]\n      }\n    ]\n  },\n  {\n    type: 'header',\n    avatar: 'imgs/projects/total-brain/total-brain-avatar.jpeg',\n    title: 'Total Brain',\n    body: `\n[totalbrain.com](https://www.totalbrain.com/)\n\nSr. Software Engineer, Front End\n    `,\n    dates: 'May 2019 - Feb 2022',\n    orientation: 'right'\n  },\n  {\n    type: 'nontimeline',\n    title: 'Total Brain Platform',\n    body: `\n\n\nWorked on numerous React apps, developed integration methods for our clients and helped convert our monolithic app into micro services.\n\nIntegrated Contentful throughout our apps to support multiple languages and give our product team members more control over the text/image content in our apps.\n\nConceived and created internal tools to speed up development and streamline our customer service workflows.\n  `,\n    orientation: 'right',\n    projects: [\n      {\n\n        screens: [\n          {\n            img: 'imgs/projects/total-brain/total-brain-overview.png',\n          }\n        ]\n      }\n    ]\n  },\n  {\n    type: 'nontimeline',\n    orientation: 'right',\n    projects: [\n      {\n\n        screens: [\n          {\n            img: 'imgs/projects/total-brain/total-brain-home-feed.jpeg',\n            body: 'Built a home feed that serves up brain activities based on our AI recommendation engine.'\n          },\n          {\n            img: 'imgs/projects/total-brain/total-brain--phaser-react-integration.jpeg',\n            body: 'Helped create a React x Phaser JS middleware to reduce redundancies and improve end user experience while interacting with our brain games and meditations.'\n          }\n        ]\n      }\n    ]\n  },\n  {\n    type: 'header',\n    title: 'Upstream Coding',\n    body: `\n[upstreamcoding.com](https://upstreamcoding.com?ref=portfolio)\n\nCo-founder, Teacher\n    `,\n    dates: 'Jun 2018 - Feb. 2022',\n    orientation: 'right'\n  },\n  {\n    type: 'nontimeline',\n    title: 'Learning Management Platform',\n    orientation: 'right',\n    projects: [\n      {\n        title: 'Student Portal',\n        screens: [\n          {\n            img: 'imgs/projects/upstream-coding/upstream-coding-student-portal.png',\n            body: 'Designed & built a central hub for instructors and students with React and Firebase. Built many integrations with Contentful APIs allows instructors to write curriculum in Markdown in a friendly CMS GUI and Calendly and Stripe handle scheduling and seamless payment processing.'\n          }\n        ]\n      }\n    ]\n  },\n  {\n    type: 'nontimeline',\n    title: 'Marketing Website',\n    orientation: 'right',\n    projects: [\n      {\n        title: 'Marketing Website',\n        screens: [\n          {\n            img: 'imgs/projects/upstream-coding/upstream-coding--marketing-website.png',\n            body: 'Designed & built a marketing site with Jekyll and Bootstrap 4. API integrations with Eventbrite, HotJar, Mailchimp, Calendly, Stripe and Google Apps Script capture user engagement and automate responses.'\n          }\n        ]\n      }\n    ]\n  },\n  {\n    type: 'header',\n    title: 'i.am+',\n    body: 'Sn. Software Engineer, Frontend',\n    dates: 'Feb. 2015 - May 2019',\n    orientation: 'right'\n  },\n  {\n    type: 'nontimeline',\n    title: 'Omega Web',\n    body: 'React + Web Audio APIs',\n    orientation: 'right',\n    projects: [\n      {\n        title: 'Omega Web',\n        screens: [\n          {\n            img: 'imgs/projects/omega-web/01--omega-web.png',\n            body: 'Omega shows up as a small circle in the bottom left of the browser and tries to grab your attention with a chat bubble. Once a user enables their microphone, Omega will introduce her self using SpeechSynthesis and temporarily disable microphone recognition. After introductions, users can speak their questions and Omega will speak the answer based on the response from the i.am+ NLU.'\n          }\n        ]\n      }\n    ]\n  },\n  {\n    id: \"tinka\",\n    type: 'nontimeline',\n    title: 'Tinka',\n    body: '[t-mobile.at](https://www.t-mobile.at)',\n    orientation: 'right',\n    projects: [\n      {\n        title: 'Tinka',\n        screens: [\n          {\n            img: 'imgs/projects/tinka/tinka-bubble.png',\n            body: 'Tinka shows up as a small circle in the top right of the browser.'\n          },\n          {\n            img: 'imgs/projects/tinka/tinka-bubble--tray.png',\n            body: 'At a certain interval she will try to catch your attention by growing in size.'\n          },\n          {\n            img: 'imgs/projects/tinka/tinka.png',\n            body: 'Once you click Tinka and agree to the TOS, you can begin typing or click a button to get assistance with customer service related inquiries about T-mobile plans and devices.'\n          }\n        ]\n      }\n    ]\n  },\n  {\n    type: 'header',\n    title: 'CitizenGlobal',\n    body: 'Sn. Software Engineer, Frontend',\n    dates: 'Feb 2011 - Feb 2015',\n    orientation: 'right',\n  },\n  {\n    type: 'nontimeline',\n    title: 'CitizenGlobal',\n    orientation: 'right',\n    projects: [\n      {\n        title: 'CitizenGlobal',\n        screens: [\n          {\n            img: 'imgs/projects/citizenglobal/citizenglobal--marketing-website.png',\n            body: 'Technologies used include JavaScript, jQuery, HTML, CSS and Skeleton.'\n          },\n          {\n            img: 'imgs/projects/citizenglobal/citizenglobal--media.png',\n            body: 'Built many features to manage thousands of media coming from body cameras, websites and social media APIs including annotation, bulk editing, filtering, sort and search.'\n          },\n          {\n            img: 'imgs/projects/citizenglobal/citizenglobal--map.png',\n            body: 'One of the more elaborate features was an integration with Google maps to allow law enforcement agents to set a pin, radius and collect media from popular social media sites during an emergency.'\n          }\n        ]\n      }\n    ]\n  },\n  {\n    type: 'nontimeline',\n    title: 'SendUs',\n    orientation: 'right',\n    projects: [\n      {\n        title: 'SendUs',\n        screens: [\n          {\n            img: 'imgs/projects/sendus/sendus--marketing-website.jpg',\n            body: 'Technologies used include JavaScript, jQuery, HTML, CSS and Skeleton.'\n          },\n          {\n            img: 'imgs/products-sendus-tooltip.jpg',\n            body: 'Built an onboarding walkthrough to guide user through key features in the interface. I worked closely with the design and product teams to create and refine an ever evolving setup process.'\n          },\n          // {\n          //   img: 'imgs/products-sendus-dashboard.jpg',\n          //   body: 'A dashboard is crucial to the success of any SASS product. I worked closely with the product team to create wireframes and engineer an interface to concisely display multiple sophisticated features on a single screen.'\n          // },\n          {\n            img: 'imgs/products-sendus-media.jpg',\n            body: 'Built numerous features to streamline the process of managing the thousands of media including a chat window, folders, tagging and bulk editing options.'\n          },\n          {\n            img: 'imgs/products-sendus-review-queue.jpg',\n            body: 'One of the more elaborate features called the Review Queue, enables users to review media simultaneously without impeding the progress of others.'\n          },\n          // {\n          //   img: 'imgs/products-sendus-analytics.jpg',\n          //   body: 'Analytics are crucial to the success of any SASS product. Users need to understand, at the macro and micro level, what activity is happening so they can be be informed and make better decisions.'\n          // },\n          // {\n          //   img: 'imgs/products-sendus-widgets.jpg',\n          //   body: 'From wireframes to execution, I engineered how users create and manage our many web based applications (widgets). In addition to the management interface, I was also on the team which engineered the photo editor depicted above.'\n          // }\n        ]\n      }\n    ]\n  },\n  {\n    type: 'header',\n    title: 'Breaking Development',\n    body: 'Co-founder, Software Engineer, Frontend',\n    dates: 'Feb 2011 - Feb 2015',\n    orientation: 'right'\n  },\n  {\n    type: 'header',\n    title: 'Freelance',\n    body: \"I'm always open to working on interesting projects.\",\n    dates: 'Feb 2009 - Current',\n    orientation: 'right'\n  },\n  {\n    type: 'nontimeline',\n    title: 'Consular.ai',\n    body: `[consular.ai](https://consular.ai)`,\n    dates: '2018',\n    orientation: 'right',\n    projects: [\n      {\n        title: 'Consular.ai',\n        screens: [\n          {\n            img: 'imgs/projects/consular-ai/consular-ai.png',\n            body: 'Reduced the volume of phone calls to Kazakhstan Embassies in the U.S. by 20% by building a React SPA that guides users through TypeForm style screens to determine if they need a visa for their upcoming travel.'\n          }\n        ]\n      }\n    ]\n  },\n  {\n    type: 'nontimeline',\n    title: 'TrainerScript',\n    body: 'Ember, Bootstrap 4, Stripe',\n    dates: '2017',\n    orientation: 'right',\n    projects: [\n      {\n        title: 'Consular.ai',\n        screens: [\n          {\n            img: 'imgs/projects/trainerscript/trainerscript-admin-panel.png',\n            body: 'Designed & built an Ember SPA to support an affiliate program for nutritional supplements which integrated with Stripe Api for payments.'\n          }\n        ]\n      }\n    ]\n  },\n  {\n    type: 'header',\n    title: 'More career details',\n    body: `[linkedin.com/in/alanmabry](https://www.linkedin.com/in/alanmabry)`,\n    dates: '🙂',\n    orientation: 'right'\n  },\n];\n\nexport default companies;\n","import React from 'react';\nimport Container from '../Container';\nimport companies from '../../data/companies';\nimport './Timeline.css';\n\nconst Timeline = () => {\n  return (\n    <div className=\"timeline\">\n      {companies.map((company, i) =>\n        <Container key={i} company={company} />\n      )}\n    </div>\n  )\n}\n\nexport default Timeline;\n","import React, { Component } from 'react';\nimport Timeline from './components/Timeline';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Timeline />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}