{"version":3,"sources":["components/Container/index.js","data/companies.js","components/Timeline/index.js","App.js","serviceWorker.js","index.js"],"names":["Container","projects","this","props","company","imgDescription","marginBottom","map","project","i","react_default","a","createElement","key","className","screens","screen","index","img","src","alt","video","width","controls","type","style","body","_this$props$company","orientation","title","avatar","dates","containerClasses","push","join","react_markdown_default","source","escapeHtml","linkTarget","Component","companies","Timeline","components_Container","App","components_Timeline","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aaf08efb.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Container.css';\nimport ReactMarkdown from 'react-markdown';\n\nclass Container extends Component {\n  projects() {\n    const {\n      projects\n    } = this.props.company;\n    \n    const imgDescription = {\n      marginBottom: '3rem'\n    }\n\n    if (projects) {\n      return (\n        projects.map((project, i) =>\n          <div key={i} className=\"company--project\">\n            {project.screens.map((screen, index) =>\n              <div key={index}>\n                {screen.img ? \n                  <img src={screen.img} alt=\"\" className=\"w-100\"/>\n                : ''}\n                {screen.video ?\n                  <video width=\"400\" controls>\n                    <source src={screen.video} type=\"video/mov\" />\n                    Your browser does not support HTML5 video.\n                  </video>\n                : ''}\n                <p style={imgDescription}>\n                  {screen.body}\n                </p>\n              </div>\n            )}\n          </div>\n        )\n      )\n    }\n    \n    return;\n  }\n\n  render() {\n    const {\n      orientation,\n      title,\n      body,\n      type,\n      avatar,\n      projects,\n      dates\n    } = this.props.company;\n    const containerClasses = ['container'];\n\n    if (orientation) {\n      containerClasses.push(orientation);\n    }\n    \n    containerClasses.push(type)\n\n    return (\n      <div className={containerClasses.join(' ')}>\n        <div className=\"content\">\n          {avatar ? <img alt=\"Avatar\" src={avatar} className=\"avatar\" /> : ''}\n          <h2>{title}</h2>\n          \n          <ReactMarkdown\n            source={body}\n            escapeHtml={false}\n            linkTarget=\"_blank\"\n          />\n\n          <div>{dates}</div>\n          {projects ? this.projects() : ''}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Container;\n","const companies = [\n  {\n    type: 'nontimeline',\n    avatar: 'https://github.com/amabes.png?size=128',\n    title: 'Alan Mabry',\n    orientation: 'right',\n    body: `\nIn 2008, I started building web applications professionally. Before that I was designing websites and pursuing a BFA.\n\nI'm framework agnostic, but recently I've been using React & Redux to build enterprise apps exclusively.\n\nI enjoy wrangling HTML & CSS to match mocks and ❤️CSS-in-JS.\n\nCurrently, I'm working on [Tinka](https://www.t-mobile.at), an AI powered customer service representative.\n\nAt my previous position, I was working on [CitizenGlobal](https://corp.citizenglobal.com), a platform for digital evidence management which was sold to the F.B.I.\n\nMy go to tech includes Javascript (ES6), React, [Contentful](https://www.contentful.com/) and Firebase.\n\n[See my LinkedIn profile](https://www.linkedin.com/in/alanmabry) for more career details.\n`\n  },\n  {\n    type: 'header',\n    title: 'i.am+',\n    body: 'Sn. Software Engineer, Frontend',\n    dates: 'Feb. 2015 - Current',\n    orientation: 'right'\n  },\n  {\n    type: 'nontimeline',\n    title: 'Omega Web',\n    body: 'React + Web Audio APIs',\n    orientation: 'right',\n    projects: [\n      {\n        title: 'Omega Web',\n        screens: [\n          {\n            img: 'imgs/projects/omega-web/01--omega-web.png',\n            body: 'Omega shows up as a small circle in the bottom left of the browser and tries to grab your attention with a chat bubble. Once a user enables their microphone, Omega will introduce her self using SpeechSynthesis and temporarily disable microphone recognition. After introductions, users can speak their questions and Omega will speak the answer based on the response from the i.am+ NLU.'\n          }\n        ]\n      }\n    ]\n  },\n  {\n    type: 'nontimeline',\n    title: 'Tinka',\n    body: 'https://www.t-mobile.at',\n    orientation: 'right',\n    projects: [\n      {\n        title: 'Tinka',\n        screens: [\n          {\n            img: 'imgs/projects/tinka/tinka-bubble.png',\n            body: 'Tinka shows up a small circle in the top right of the browser.'\n          },\n          {\n            img: 'imgs/projects/tinka/tinka-bubble--tray.png',\n            body: 'At a certain interval she will try to catch your attention by growing in size'\n          },\n          {\n            img: 'imgs/projects/tinka/tinka.png',\n            body: 'Once you click Tinka and agree to the TOS, you can begin typing or click a button'\n          }\n        ]\n      }\n    ]\n  },\n  {\n    type: 'header',\n    title: 'CitizenGlobal',\n    body: 'Sn. Software Engineer, Frontend',\n    dates: 'Feb 2011 - Feb 2015',\n    orientation: 'right',\n  },\n  {\n    type: 'nontimeline',\n    title: 'SendUs',\n    body: 'Lorem ipsum body',\n    orientation: 'right',\n    projects: [\n      {\n        title: 'SendUs',\n        screens: [\n          {\n            img: 'imgs/products-sendus-tooltip.jpg',\n            body: 'Finding a balance between hand holding users and letting them intuitively discover key features of the user interface can be quite challenging. I worked closely with the design and product teams to create and refine an ever evolving setup process which is clear and unobtrusive.'\n          },\n          // {\n          //   img: 'imgs/products-sendus-dashboard.jpg',\n          //   body: 'A dashboard is crucial to the success of any SASS product. I worked closely with the product team to create wireframes and engineer an interface to concisely display multiple sophisticated features on a single screen.'\n          // },\n          {\n            img: 'imgs/products-sendus-media.jpg',\n            body: 'From wireframes to execution, I engineered how users digest the thousands of media submissions which pour in during a campaign. The overarching challenge posed by our CEO was to display media in a way which was familiar to users in order to avoid unnecessary user education. Ultimately we decided to display media as if it were an email, organizing and creating a layout on par with industry leaders in that space.'\n          },\n          {\n            img: 'imgs/products-sendus-review-queue.jpg',\n            body: 'From wireframes to execution, I engineered how multiple users can digest massive amounts of media simultaneously without impeding the progress of other users by decreasing the chances of users viewing media that has already been watched or reviewed through their \"Review Queue.\"'\n          },\n          {\n            img: 'imgs/products-sendus-analytics.jpg',\n            body: 'Analytics are crucial to the success of any SASS product. Users need to understand, at the macro and micro level, what activity is happening so they can be be informed and make better decisions.'\n          },\n          {\n            img: 'imgs/products-sendus-widgets.jpg',\n            body: 'From wireframes to execution, I engineered how users create and manage our many web based applications (widgets). In addition to the management interface, I was also on the team which engineered the photo editor depicted above.'\n          }\n        ]\n      }\n    ]\n  },\n  {\n    type: 'header',\n    title: 'Breaking Development',\n    body: 'Co-founder, Software Engineer, Frontend',\n    dates: 'Feb 2011 - Feb 2015',\n    orientation: 'right'\n  },\n  {\n    type: 'header',\n    title: 'Freelance',\n    body: \"I'm always open to working on interesting projects.\",\n    dates: 'Feb 2009 - Current',\n    orientation: 'right'\n  },\n  {\n    type: 'nontimeline',\n    title: 'Upstream Coding',\n    body: 'https://portal.upstreamcoding.com',\n    orientation: 'right',\n    projects: [\n      {\n        title: 'Student Portal',\n        screens: [\n          {\n            img: 'imgs/projects/upstream-coding/upstream-coding-student-portal.png',\n            body: 'Designed & built a React SPA for Upstream Coding so instructors can easily write curriculum using Contentful, students can be assessed on skills and can request additional help by schedule appointments via Calendly and make payments via Stripe from a web app.'\n          }\n        ]\n      }\n    ]\n  },\n  {\n    type: 'nontimeline',\n    title: 'Consular.ai',\n    body: 'https://consular.ai',\n    orientation: 'right',\n    projects: [\n      {\n        title: 'Consular.ai',\n        screens: [\n          {\n            img: 'imgs/projects/consular-ai/consular-ai.png',\n            body: 'Reduced the volume of phone calls to Kazakhstan Embassies in the U.S. by 20% by building a React SPA that guides users through TypeForm style screens to determine if they need a visa for their upcoming travel.'\n          }\n        ]\n      }\n    ]\n  },\n  {\n    type: 'nontimeline',\n    title: 'TrainerScript',\n    body: 'Ember, Bootstrap 4, Stripe',\n    orientation: 'right',\n    projects: [\n      {\n        title: 'Consular.ai',\n        screens: [\n          {\n            img: 'imgs/projects/trainerscript/trainerscript-admin-panel.png',\n            body: 'Designed & built an Ember SPA to support an affiliate program for nutritional supplements which integrated with Stripe Api for payments.'\n          }\n        ]\n      }\n    ]\n  },\n];\n\nexport default companies;\n","import React, { Component } from 'react';\nimport Container from '../Container';\nimport './Timeline.css';\nimport companies from '../../data/companies';\n\nclass Timeline extends Component {\n  \n  render() {\n    return (\n      <div className=\"timeline\">\n        {companies.map((company, i) =>\n          <Container key={i} company={company} />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Timeline;\n","import React, { Component } from 'react';\nimport Timeline from './components/Timeline';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Timeline />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}